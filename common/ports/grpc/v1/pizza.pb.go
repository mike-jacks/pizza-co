// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: common/proto/v1/pizza.proto

package common_v1_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for available pizza toppings.
type Topping int32

const (
	Topping_TOPPING_UNSPECIFIED Topping = 0
	Topping_PEPPERONI           Topping = 1
	Topping_MUSHROOMS           Topping = 2
	Topping_ONIONS              Topping = 3
	Topping_SAUSAGE             Topping = 4
	Topping_BACON               Topping = 5
	Topping_BLACK_OLIVES        Topping = 6
	Topping_GREEN_PEPPERS       Topping = 7
	Topping_PINEAPPLE           Topping = 8
	Topping_ANCHOVIES           Topping = 9
)

// Enum value maps for Topping.
var (
	Topping_name = map[int32]string{
		0: "TOPPING_UNSPECIFIED",
		1: "PEPPERONI",
		2: "MUSHROOMS",
		3: "ONIONS",
		4: "SAUSAGE",
		5: "BACON",
		6: "BLACK_OLIVES",
		7: "GREEN_PEPPERS",
		8: "PINEAPPLE",
		9: "ANCHOVIES",
	}
	Topping_value = map[string]int32{
		"TOPPING_UNSPECIFIED": 0,
		"PEPPERONI":           1,
		"MUSHROOMS":           2,
		"ONIONS":              3,
		"SAUSAGE":             4,
		"BACON":               5,
		"BLACK_OLIVES":        6,
		"GREEN_PEPPERS":       7,
		"PINEAPPLE":           8,
		"ANCHOVIES":           9,
	}
)

func (x Topping) Enum() *Topping {
	p := new(Topping)
	*p = x
	return p
}

func (x Topping) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Topping) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_v1_pizza_proto_enumTypes[0].Descriptor()
}

func (Topping) Type() protoreflect.EnumType {
	return &file_common_proto_v1_pizza_proto_enumTypes[0]
}

func (x Topping) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Topping.Descriptor instead.
func (Topping) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{0}
}

// Enum for pizza sizes
type Size int32

const (
	Size_SIZE_UNSPECIFIED Size = 0
	Size_SMALL            Size = 1
	Size_MEDIUM           Size = 2
	Size_LARGE            Size = 3
	Size_EXTRA_LARGE      Size = 4
)

// Enum value maps for Size.
var (
	Size_name = map[int32]string{
		0: "SIZE_UNSPECIFIED",
		1: "SMALL",
		2: "MEDIUM",
		3: "LARGE",
		4: "EXTRA_LARGE",
	}
	Size_value = map[string]int32{
		"SIZE_UNSPECIFIED": 0,
		"SMALL":            1,
		"MEDIUM":           2,
		"LARGE":            3,
		"EXTRA_LARGE":      4,
	}
)

func (x Size) Enum() *Size {
	p := new(Size)
	*p = x
	return p
}

func (x Size) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Size) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_v1_pizza_proto_enumTypes[1].Descriptor()
}

func (Size) Type() protoreflect.EnumType {
	return &file_common_proto_v1_pizza_proto_enumTypes[1]
}

func (x Size) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Size.Descriptor instead.
func (Size) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{1}
}

// Enum for types of pizza crusts.
type CrustType int32

const (
	CrustType_CRUST_TYPE_UNSPECIFIED CrustType = 0
	CrustType_THIN                   CrustType = 1
	CrustType_REGULAR                CrustType = 2
	CrustType_STUFFED                CrustType = 3
	CrustType_NEW_YORK               CrustType = 4
	CrustType_DEEP_DISH              CrustType = 5
	CrustType_GLUTEN_FREE            CrustType = 6
)

// Enum value maps for CrustType.
var (
	CrustType_name = map[int32]string{
		0: "CRUST_TYPE_UNSPECIFIED",
		1: "THIN",
		2: "REGULAR",
		3: "STUFFED",
		4: "NEW_YORK",
		5: "DEEP_DISH",
		6: "GLUTEN_FREE",
	}
	CrustType_value = map[string]int32{
		"CRUST_TYPE_UNSPECIFIED": 0,
		"THIN":                   1,
		"REGULAR":                2,
		"STUFFED":                3,
		"NEW_YORK":               4,
		"DEEP_DISH":              5,
		"GLUTEN_FREE":            6,
	}
)

func (x CrustType) Enum() *CrustType {
	p := new(CrustType)
	*p = x
	return p
}

func (x CrustType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrustType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_v1_pizza_proto_enumTypes[2].Descriptor()
}

func (CrustType) Type() protoreflect.EnumType {
	return &file_common_proto_v1_pizza_proto_enumTypes[2]
}

func (x CrustType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrustType.Descriptor instead.
func (CrustType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{2}
}

// Extra options for the pizza
type Extra int32

const (
	Extra_EXTRA_UNSPECIFIED Extra = 0
	Extra_EXTRA_CHEESE      Extra = 1
	Extra_EXTRA_SAUCE       Extra = 2
	Extra_GARLIC_CRUST      Extra = 3
	Extra_BBQ_SAUCE         Extra = 4
)

// Enum value maps for Extra.
var (
	Extra_name = map[int32]string{
		0: "EXTRA_UNSPECIFIED",
		1: "EXTRA_CHEESE",
		2: "EXTRA_SAUCE",
		3: "GARLIC_CRUST",
		4: "BBQ_SAUCE",
	}
	Extra_value = map[string]int32{
		"EXTRA_UNSPECIFIED": 0,
		"EXTRA_CHEESE":      1,
		"EXTRA_SAUCE":       2,
		"GARLIC_CRUST":      3,
		"BBQ_SAUCE":         4,
	}
)

func (x Extra) Enum() *Extra {
	p := new(Extra)
	*p = x
	return p
}

func (x Extra) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Extra) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_v1_pizza_proto_enumTypes[3].Descriptor()
}

func (Extra) Type() protoreflect.EnumType {
	return &file_common_proto_v1_pizza_proto_enumTypes[3]
}

func (x Extra) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Extra.Descriptor instead.
func (Extra) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{3}
}

// Pizza contains order details of a pizza being ordered
type Pizza struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toppings     []Topping `protobuf:"varint,1,rep,packed,name=toppings,proto3,enum=common.proto.v1.Topping" json:"toppings,omitempty"`
	Size         Size      `protobuf:"varint,2,opt,name=size,proto3,enum=common.proto.v1.Size" json:"size,omitempty"`
	CrustType    CrustType `protobuf:"varint,3,opt,name=crust_type,json=crustType,proto3,enum=common.proto.v1.CrustType" json:"crust_type,omitempty"`
	ExtraOptions []Extra   `protobuf:"varint,4,rep,packed,name=extra_options,json=extraOptions,proto3,enum=common.proto.v1.Extra" json:"extra_options,omitempty"`
	Quantity     uint32    `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Pizza) Reset() {
	*x = Pizza{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_v1_pizza_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pizza) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pizza) ProtoMessage() {}

func (x *Pizza) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_v1_pizza_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pizza.ProtoReflect.Descriptor instead.
func (*Pizza) Descriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{0}
}

func (x *Pizza) GetToppings() []Topping {
	if x != nil {
		return x.Toppings
	}
	return nil
}

func (x *Pizza) GetSize() Size {
	if x != nil {
		return x.Size
	}
	return Size_SIZE_UNSPECIFIED
}

func (x *Pizza) GetCrustType() CrustType {
	if x != nil {
		return x.CrustType
	}
	return CrustType_CRUST_TYPE_UNSPECIFIED
}

func (x *Pizza) GetExtraOptions() []Extra {
	if x != nil {
		return x.ExtraOptions
	}
	return nil
}

func (x *Pizza) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PizzaCrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrustType CrustType `protobuf:"varint,1,opt,name=crust_type,json=crustType,proto3,enum=common.proto.v1.CrustType" json:"crust_type,omitempty"`
	CrustSize Size      `protobuf:"varint,2,opt,name=crust_size,json=crustSize,proto3,enum=common.proto.v1.Size" json:"crust_size,omitempty"`
}

func (x *PizzaCrust) Reset() {
	*x = PizzaCrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_v1_pizza_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PizzaCrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PizzaCrust) ProtoMessage() {}

func (x *PizzaCrust) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_v1_pizza_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PizzaCrust.ProtoReflect.Descriptor instead.
func (*PizzaCrust) Descriptor() ([]byte, []int) {
	return file_common_proto_v1_pizza_proto_rawDescGZIP(), []int{1}
}

func (x *PizzaCrust) GetCrustType() CrustType {
	if x != nil {
		return x.CrustType
	}
	return CrustType_CRUST_TYPE_UNSPECIFIED
}

func (x *PizzaCrust) GetCrustSize() Size {
	if x != nil {
		return x.CrustSize
	}
	return Size_SIZE_UNSPECIFIED
}

var File_common_proto_v1_pizza_proto protoreflect.FileDescriptor

var file_common_proto_v1_pizza_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x22, 0xfc,
	0x01, 0x0a, 0x05, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x12, 0x34, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x75,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x72, 0x75, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x7d, 0x0a,
	0x0a, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x43, 0x72, 0x75, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x72, 0x75,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x75, 0x73, 0x74, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x09, 0x63, 0x72, 0x75, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x2a, 0xa7, 0x01, 0x0a,
	0x07, 0x54, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f, 0x50, 0x50,
	0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x45, 0x50, 0x50, 0x45, 0x52, 0x4f, 0x4e, 0x49, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x41, 0x55, 0x53, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x43, 0x4f,
	0x4e, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x4c, 0x49,
	0x56, 0x45, 0x53, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x50,
	0x45, 0x50, 0x50, 0x45, 0x52, 0x53, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e, 0x45,
	0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x43, 0x48, 0x4f,
	0x56, 0x49, 0x45, 0x53, 0x10, 0x09, 0x2a, 0x4f, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4c,
	0x41, 0x52, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f,
	0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x04, 0x2a, 0x79, 0x0a, 0x09, 0x43, 0x72, 0x75, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x48, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45,
	0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x55, 0x46, 0x46,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x59, 0x4f, 0x52, 0x4b,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x45, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x48, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x4c, 0x55, 0x54, 0x45, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x45,
	0x10, 0x06, 0x2a, 0x62, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x58, 0x54, 0x52, 0x41, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x48, 0x45, 0x45,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x53, 0x41,
	0x55, 0x43, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x41, 0x52, 0x4c, 0x49, 0x43, 0x5f,
	0x43, 0x52, 0x55, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x42, 0x51, 0x5f, 0x53,
	0x41, 0x55, 0x43, 0x45, 0x10, 0x04, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2f,
	0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_common_proto_v1_pizza_proto_rawDescOnce sync.Once
	file_common_proto_v1_pizza_proto_rawDescData = file_common_proto_v1_pizza_proto_rawDesc
)

func file_common_proto_v1_pizza_proto_rawDescGZIP() []byte {
	file_common_proto_v1_pizza_proto_rawDescOnce.Do(func() {
		file_common_proto_v1_pizza_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_v1_pizza_proto_rawDescData)
	})
	return file_common_proto_v1_pizza_proto_rawDescData
}

var file_common_proto_v1_pizza_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_common_proto_v1_pizza_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_proto_v1_pizza_proto_goTypes = []any{
	(Topping)(0),       // 0: common.proto.v1.Topping
	(Size)(0),          // 1: common.proto.v1.Size
	(CrustType)(0),     // 2: common.proto.v1.CrustType
	(Extra)(0),         // 3: common.proto.v1.Extra
	(*Pizza)(nil),      // 4: common.proto.v1.Pizza
	(*PizzaCrust)(nil), // 5: common.proto.v1.PizzaCrust
}
var file_common_proto_v1_pizza_proto_depIdxs = []int32{
	0, // 0: common.proto.v1.Pizza.toppings:type_name -> common.proto.v1.Topping
	1, // 1: common.proto.v1.Pizza.size:type_name -> common.proto.v1.Size
	2, // 2: common.proto.v1.Pizza.crust_type:type_name -> common.proto.v1.CrustType
	3, // 3: common.proto.v1.Pizza.extra_options:type_name -> common.proto.v1.Extra
	2, // 4: common.proto.v1.PizzaCrust.crust_type:type_name -> common.proto.v1.CrustType
	1, // 5: common.proto.v1.PizzaCrust.crust_size:type_name -> common.proto.v1.Size
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_common_proto_v1_pizza_proto_init() }
func file_common_proto_v1_pizza_proto_init() {
	if File_common_proto_v1_pizza_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_v1_pizza_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Pizza); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_v1_pizza_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PizzaCrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_v1_pizza_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_v1_pizza_proto_goTypes,
		DependencyIndexes: file_common_proto_v1_pizza_proto_depIdxs,
		EnumInfos:         file_common_proto_v1_pizza_proto_enumTypes,
		MessageInfos:      file_common_proto_v1_pizza_proto_msgTypes,
	}.Build()
	File_common_proto_v1_pizza_proto = out.File
	file_common_proto_v1_pizza_proto_rawDesc = nil
	file_common_proto_v1_pizza_proto_goTypes = nil
	file_common_proto_v1_pizza_proto_depIdxs = nil
}
