// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: order_management/v1/order_management.proto

package order_management_v1_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for payment types.
type PaymentType int32

const (
	PaymentType_PAYMENT_TYPE_UNSPECIFIED PaymentType = 0
	PaymentType_CASH                     PaymentType = 1
	PaymentType_CREDIT_CARD              PaymentType = 2
	PaymentType_APPLE_PAY                PaymentType = 3
	PaymentType_GOOGLE_PAY               PaymentType = 4
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "PAYMENT_TYPE_UNSPECIFIED",
		1: "CASH",
		2: "CREDIT_CARD",
		3: "APPLE_PAY",
		4: "GOOGLE_PAY",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_TYPE_UNSPECIFIED": 0,
		"CASH":                     1,
		"CREDIT_CARD":              2,
		"APPLE_PAY":                3,
		"GOOGLE_PAY":               4,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[0].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[0]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{0}
}

// Enum for payment timeframes
type PaymentTimeframe int32

const (
	PaymentTimeframe_PAYMENT_TIMEFRAME_UNSPECIFIED PaymentTimeframe = 0
	PaymentTimeframe_PREPAID                       PaymentTimeframe = 1
	PaymentTimeframe_PAYLATER                      PaymentTimeframe = 2
)

// Enum value maps for PaymentTimeframe.
var (
	PaymentTimeframe_name = map[int32]string{
		0: "PAYMENT_TIMEFRAME_UNSPECIFIED",
		1: "PREPAID",
		2: "PAYLATER",
	}
	PaymentTimeframe_value = map[string]int32{
		"PAYMENT_TIMEFRAME_UNSPECIFIED": 0,
		"PREPAID":                       1,
		"PAYLATER":                      2,
	}
)

func (x PaymentTimeframe) Enum() *PaymentTimeframe {
	p := new(PaymentTimeframe)
	*p = x
	return p
}

func (x PaymentTimeframe) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentTimeframe) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[1].Descriptor()
}

func (PaymentTimeframe) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[1]
}

func (x PaymentTimeframe) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentTimeframe.Descriptor instead.
func (PaymentTimeframe) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{1}
}

// Enum for types of phone numbers.
type PhoneType int32

const (
	PhoneType_PHONE_TYPE_UNSPECIFIED PhoneType = 0
	PhoneType_MOBILE                 PhoneType = 1
	PhoneType_HOME                   PhoneType = 2
	PhoneType_WORK                   PhoneType = 3
)

// Enum value maps for PhoneType.
var (
	PhoneType_name = map[int32]string{
		0: "PHONE_TYPE_UNSPECIFIED",
		1: "MOBILE",
		2: "HOME",
		3: "WORK",
	}
	PhoneType_value = map[string]int32{
		"PHONE_TYPE_UNSPECIFIED": 0,
		"MOBILE":                 1,
		"HOME":                   2,
		"WORK":                   3,
	}
)

func (x PhoneType) Enum() *PhoneType {
	p := new(PhoneType)
	*p = x
	return p
}

func (x PhoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[2].Descriptor()
}

func (PhoneType) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[2]
}

func (x PhoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneType.Descriptor instead.
func (PhoneType) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2}
}

// Enum for order status.
type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_RECEIVED           Status = 1
	Status_CHECKING_INVENTORY Status = 2
	Status_PROCESSING_PAYMENT Status = 3
	Status_PROCESSING_ORDER   Status = 4
	Status_COMPLETE           Status = 5
	Status_ERROR              Status = 6
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "RECEIVED",
		2: "CHECKING_INVENTORY",
		3: "PROCESSING_PAYMENT",
		4: "PROCESSING_ORDER",
		5: "COMPLETE",
		6: "ERROR",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"RECEIVED":           1,
		"CHECKING_INVENTORY": 2,
		"PROCESSING_PAYMENT": 3,
		"PROCESSING_ORDER":   4,
		"COMPLETE":           5,
		"ERROR":              6,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[3].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[3]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{3}
}

// Enum for available pizza toppings.
type Pizza_Topping int32

const (
	Pizza_TOPPING_UNSPECIFIED Pizza_Topping = 0
	Pizza_PEPPERONI           Pizza_Topping = 1
	Pizza_MUSHROOMS           Pizza_Topping = 2
	Pizza_ONIONS              Pizza_Topping = 3
	Pizza_SAUSAGE             Pizza_Topping = 4
	Pizza_BACON               Pizza_Topping = 5
	Pizza_BLACK_OLIVES        Pizza_Topping = 6
	Pizza_GREEN_PEPPERS       Pizza_Topping = 7
	Pizza_PINEAPPLE           Pizza_Topping = 8
	Pizza_ANCHOVIES           Pizza_Topping = 9
)

// Enum value maps for Pizza_Topping.
var (
	Pizza_Topping_name = map[int32]string{
		0: "TOPPING_UNSPECIFIED",
		1: "PEPPERONI",
		2: "MUSHROOMS",
		3: "ONIONS",
		4: "SAUSAGE",
		5: "BACON",
		6: "BLACK_OLIVES",
		7: "GREEN_PEPPERS",
		8: "PINEAPPLE",
		9: "ANCHOVIES",
	}
	Pizza_Topping_value = map[string]int32{
		"TOPPING_UNSPECIFIED": 0,
		"PEPPERONI":           1,
		"MUSHROOMS":           2,
		"ONIONS":              3,
		"SAUSAGE":             4,
		"BACON":               5,
		"BLACK_OLIVES":        6,
		"GREEN_PEPPERS":       7,
		"PINEAPPLE":           8,
		"ANCHOVIES":           9,
	}
)

func (x Pizza_Topping) Enum() *Pizza_Topping {
	p := new(Pizza_Topping)
	*p = x
	return p
}

func (x Pizza_Topping) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pizza_Topping) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[4].Descriptor()
}

func (Pizza_Topping) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[4]
}

func (x Pizza_Topping) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pizza_Topping.Descriptor instead.
func (Pizza_Topping) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2, 0}
}

// Enum for pizza sizes
type Pizza_Size int32

const (
	Pizza_SIZE_UNSPECIFIED Pizza_Size = 0
	Pizza_SMALL            Pizza_Size = 1
	Pizza_MEDIUM           Pizza_Size = 2
	Pizza_LARGE            Pizza_Size = 3
	Pizza_EXTRA_LARGE      Pizza_Size = 4
)

// Enum value maps for Pizza_Size.
var (
	Pizza_Size_name = map[int32]string{
		0: "SIZE_UNSPECIFIED",
		1: "SMALL",
		2: "MEDIUM",
		3: "LARGE",
		4: "EXTRA_LARGE",
	}
	Pizza_Size_value = map[string]int32{
		"SIZE_UNSPECIFIED": 0,
		"SMALL":            1,
		"MEDIUM":           2,
		"LARGE":            3,
		"EXTRA_LARGE":      4,
	}
)

func (x Pizza_Size) Enum() *Pizza_Size {
	p := new(Pizza_Size)
	*p = x
	return p
}

func (x Pizza_Size) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pizza_Size) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[5].Descriptor()
}

func (Pizza_Size) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[5]
}

func (x Pizza_Size) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pizza_Size.Descriptor instead.
func (Pizza_Size) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2, 1}
}

// Enum for types of pizza crusts.
type Pizza_CrustType int32

const (
	Pizza_CRUST_TYPE_UNSPECIFIED Pizza_CrustType = 0
	Pizza_THIN                   Pizza_CrustType = 1
	Pizza_REGULAR                Pizza_CrustType = 2
	Pizza_STUFFED                Pizza_CrustType = 3
	Pizza_NEW_YORK               Pizza_CrustType = 4
	Pizza_DEEP_DISH              Pizza_CrustType = 5
	Pizza_GLUTEN_FREE            Pizza_CrustType = 6
)

// Enum value maps for Pizza_CrustType.
var (
	Pizza_CrustType_name = map[int32]string{
		0: "CRUST_TYPE_UNSPECIFIED",
		1: "THIN",
		2: "REGULAR",
		3: "STUFFED",
		4: "NEW_YORK",
		5: "DEEP_DISH",
		6: "GLUTEN_FREE",
	}
	Pizza_CrustType_value = map[string]int32{
		"CRUST_TYPE_UNSPECIFIED": 0,
		"THIN":                   1,
		"REGULAR":                2,
		"STUFFED":                3,
		"NEW_YORK":               4,
		"DEEP_DISH":              5,
		"GLUTEN_FREE":            6,
	}
)

func (x Pizza_CrustType) Enum() *Pizza_CrustType {
	p := new(Pizza_CrustType)
	*p = x
	return p
}

func (x Pizza_CrustType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pizza_CrustType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[6].Descriptor()
}

func (Pizza_CrustType) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[6]
}

func (x Pizza_CrustType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pizza_CrustType.Descriptor instead.
func (Pizza_CrustType) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2, 2}
}

// Extra options for the pizza
type Pizza_Extra int32

const (
	Pizza_EXTRA_UNSPECIFIED Pizza_Extra = 0
	Pizza_EXTRA_CHEESE      Pizza_Extra = 1
	Pizza_EXTRA_SAUCE       Pizza_Extra = 2
	Pizza_GARLIC_CRUST      Pizza_Extra = 3
	Pizza_BBQ_SAUCE         Pizza_Extra = 4
)

// Enum value maps for Pizza_Extra.
var (
	Pizza_Extra_name = map[int32]string{
		0: "EXTRA_UNSPECIFIED",
		1: "EXTRA_CHEESE",
		2: "EXTRA_SAUCE",
		3: "GARLIC_CRUST",
		4: "BBQ_SAUCE",
	}
	Pizza_Extra_value = map[string]int32{
		"EXTRA_UNSPECIFIED": 0,
		"EXTRA_CHEESE":      1,
		"EXTRA_SAUCE":       2,
		"GARLIC_CRUST":      3,
		"BBQ_SAUCE":         4,
	}
)

func (x Pizza_Extra) Enum() *Pizza_Extra {
	p := new(Pizza_Extra)
	*p = x
	return p
}

func (x Pizza_Extra) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pizza_Extra) Descriptor() protoreflect.EnumDescriptor {
	return file_order_management_v1_order_management_proto_enumTypes[7].Descriptor()
}

func (Pizza_Extra) Type() protoreflect.EnumType {
	return &file_order_management_v1_order_management_proto_enumTypes[7]
}

func (x Pizza_Extra) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pizza_Extra.Descriptor instead.
func (Pizza_Extra) EnumDescriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2, 3}
}

// OrderResponse represents the response while processing an order.
type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status  Status `protobuf:"varint,2,opt,name=status,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.Status" json:"status,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{0}
}

func (x *OrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *OrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// OrderRequest contains all the necessary information to place an order
type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerInfo  *Customer `protobuf:"bytes,1,opt,name=customer_info,json=customerInfo,proto3" json:"customer_info,omitempty"`
	Pizzas        []*Pizza  `protobuf:"bytes,2,rep,name=pizzas,proto3" json:"pizzas,omitempty"`
	PaymentMethod *Payment  `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{1}
}

func (x *OrderRequest) GetCustomerInfo() *Customer {
	if x != nil {
		return x.CustomerInfo
	}
	return nil
}

func (x *OrderRequest) GetPizzas() []*Pizza {
	if x != nil {
		return x.Pizzas
	}
	return nil
}

func (x *OrderRequest) GetPaymentMethod() *Payment {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

// Pizza contains order details of a pizza being ordered
type Pizza struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toppings     []Pizza_Topping `protobuf:"varint,1,rep,packed,name=toppings,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza_Topping" json:"toppings,omitempty"`
	Size         Pizza_Size      `protobuf:"varint,2,opt,name=size,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza_Size" json:"size,omitempty"`
	CrustType    Pizza_CrustType `protobuf:"varint,3,opt,name=crust_type,json=crustType,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza_CrustType" json:"crust_type,omitempty"`
	ExtraOptions []Pizza_Extra   `protobuf:"varint,4,rep,packed,name=extra_options,json=extraOptions,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza_Extra" json:"extra_options,omitempty"`
	Quantity     uint32          `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Pizza) Reset() {
	*x = Pizza{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pizza) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pizza) ProtoMessage() {}

func (x *Pizza) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pizza.ProtoReflect.Descriptor instead.
func (*Pizza) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{2}
}

func (x *Pizza) GetToppings() []Pizza_Topping {
	if x != nil {
		return x.Toppings
	}
	return nil
}

func (x *Pizza) GetSize() Pizza_Size {
	if x != nil {
		return x.Size
	}
	return Pizza_SIZE_UNSPECIFIED
}

func (x *Pizza) GetCrustType() Pizza_CrustType {
	if x != nil {
		return x.CrustType
	}
	return Pizza_CRUST_TYPE_UNSPECIFIED
}

func (x *Pizza) GetExtraOptions() []Pizza_Extra {
	if x != nil {
		return x.ExtraOptions
	}
	return nil
}

func (x *Pizza) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Payment information for the order.
type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentType      PaymentType      `protobuf:"varint,1,opt,name=payment_type,json=paymentType,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentType" json:"payment_type,omitempty"`
	PaymentTimeframe PaymentTimeframe `protobuf:"varint,2,opt,name=payment_timeframe,json=paymentTimeframe,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentTimeframe" json:"payment_timeframe,omitempty"`
	TotalOrderAmount string           `protobuf:"bytes,3,opt,name=total_order_amount,json=totalOrderAmount,proto3" json:"total_order_amount,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{3}
}

func (x *Payment) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_TYPE_UNSPECIFIED
}

func (x *Payment) GetPaymentTimeframe() PaymentTimeframe {
	if x != nil {
		return x.PaymentTimeframe
	}
	return PaymentTimeframe_PAYMENT_TIMEFRAME_UNSPECIFIED
}

func (x *Payment) GetTotalOrderAmount() string {
	if x != nil {
		return x.TotalOrderAmount
	}
	return ""
}

// Customer details.
type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName       string       `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName        string       `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	EmailAddress    string       `protobuf:"bytes,4,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	DeliveryAddress *Address     `protobuf:"bytes,5,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	PhoneNumber     *PhoneNumber `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{4}
}

func (x *Customer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Customer) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Customer) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Customer) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Customer) GetDeliveryAddress() *Address {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *Customer) GetPhoneNumber() *PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

// Address details for delivery.
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HouseNumber string `protobuf:"bytes,1,opt,name=house_number,json=houseNumber,proto3" json:"house_number,omitempty"`
	StreetName  string `protobuf:"bytes,2,opt,name=street_name,json=streetName,proto3" json:"street_name,omitempty"`
	AptNumber   string `protobuf:"bytes,3,opt,name=apt_number,json=aptNumber,proto3" json:"apt_number,omitempty"`
	City        string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	State       string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ZipCode     string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{5}
}

func (x *Address) GetHouseNumber() string {
	if x != nil {
		return x.HouseNumber
	}
	return ""
}

func (x *Address) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *Address) GetAptNumber() string {
	if x != nil {
		return x.AptNumber
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

// Phone number details.
type PhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string    `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type   PhoneType `protobuf:"varint,2,opt,name=type,proto3,enum=github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneType" json:"type,omitempty"`
}

func (x *PhoneNumber) Reset() {
	*x = PhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_management_v1_order_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumber) ProtoMessage() {}

func (x *PhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_order_management_v1_order_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumber.ProtoReflect.Descriptor instead.
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return file_order_management_v1_order_management_proto_rawDescGZIP(), []int{6}
}

func (x *PhoneNumber) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *PhoneNumber) GetType() PhoneType {
	if x != nil {
		return x.Type
	}
	return PhoneType_PHONE_TYPE_UNSPECIFIED
}

var File_order_management_v1_order_management_proto protoreflect.FileDescriptor

var file_order_management_v1_order_management_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61,
	0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a,
	0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbd, 0x02, 0x0a, 0x0c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x0d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f,
	0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a,
	0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x12, 0x69,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x96, 0x07, 0x0a, 0x05, 0x50, 0x69,
	0x7a, 0x7a, 0x61, 0x12, 0x64, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69,
	0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x54, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x59, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e,
	0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x63, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73,
	0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x43, 0x72, 0x75, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x6b, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa7, 0x01, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x45, 0x50, 0x50, 0x45, 0x52, 0x4f, 0x4e, 0x49, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x55, 0x53, 0x48, 0x52, 0x4f, 0x4f, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f,
	0x4e, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x41, 0x55, 0x53, 0x41,
	0x47, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x43, 0x4f, 0x4e, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x4c, 0x49, 0x56, 0x45, 0x53, 0x10,
	0x06, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x50, 0x45, 0x50, 0x50, 0x45,
	0x52, 0x53, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e, 0x45, 0x41, 0x50, 0x50, 0x4c,
	0x45, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x43, 0x48, 0x4f, 0x56, 0x49, 0x45, 0x53,
	0x10, 0x09, 0x22, 0x4f, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x49,
	0x5a, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x41, 0x52, 0x47, 0x45,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x4c, 0x41, 0x52, 0x47,
	0x45, 0x10, 0x04, 0x22, 0x79, 0x0a, 0x09, 0x43, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x48, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41,
	0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x55, 0x46, 0x46, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x59, 0x4f, 0x52, 0x4b, 0x10, 0x04, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x45, 0x45, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x48, 0x10, 0x05, 0x12, 0x0f, 0x0a,
	0x0b, 0x47, 0x4c, 0x55, 0x54, 0x45, 0x4e, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x06, 0x22, 0x62,
	0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x54, 0x52, 0x41,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x48, 0x45, 0x45, 0x53, 0x45, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x53, 0x41, 0x55, 0x43, 0x45, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x41, 0x52, 0x4c, 0x49, 0x43, 0x5f, 0x43, 0x52, 0x55, 0x53,
	0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x42, 0x51, 0x5f, 0x53, 0x41, 0x55, 0x43, 0x45,
	0x10, 0x04, 0x22, 0x9c, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x69,
	0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a,
	0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a,
	0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xd5, 0x02, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x6d, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b,
	0x73, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x69,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a,
	0x7a, 0x61, 0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x70, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7f, 0x0a,
	0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61,
	0x5f, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x65,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x41, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f,
	0x50, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x5f,
	0x50, 0x41, 0x59, 0x10, 0x04, 0x2a, 0x50, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x52, 0x45, 0x50, 0x41, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x59,
	0x4c, 0x41, 0x54, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x47, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x03,
	0x2a, 0x8d, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e,
	0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06,
	0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x69, 0x6b, 0x65, 0x5f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x2f, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x5f,
	0x63, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_management_v1_order_management_proto_rawDescOnce sync.Once
	file_order_management_v1_order_management_proto_rawDescData = file_order_management_v1_order_management_proto_rawDesc
)

func file_order_management_v1_order_management_proto_rawDescGZIP() []byte {
	file_order_management_v1_order_management_proto_rawDescOnce.Do(func() {
		file_order_management_v1_order_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_management_v1_order_management_proto_rawDescData)
	})
	return file_order_management_v1_order_management_proto_rawDescData
}

var file_order_management_v1_order_management_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_order_management_v1_order_management_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_order_management_v1_order_management_proto_goTypes = []any{
	(PaymentType)(0),      // 0: github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentType
	(PaymentTimeframe)(0), // 1: github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentTimeframe
	(PhoneType)(0),        // 2: github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneType
	(Status)(0),           // 3: github.com.mike_jacks.pizza_co.protos.order_management.v1.Status
	(Pizza_Topping)(0),    // 4: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Topping
	(Pizza_Size)(0),       // 5: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Size
	(Pizza_CrustType)(0),  // 6: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.CrustType
	(Pizza_Extra)(0),      // 7: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Extra
	(*OrderResponse)(nil), // 8: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderResponse
	(*OrderRequest)(nil),  // 9: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderRequest
	(*Pizza)(nil),         // 10: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza
	(*Payment)(nil),       // 11: github.com.mike_jacks.pizza_co.protos.order_management.v1.Payment
	(*Customer)(nil),      // 12: github.com.mike_jacks.pizza_co.protos.order_management.v1.Customer
	(*Address)(nil),       // 13: github.com.mike_jacks.pizza_co.protos.order_management.v1.Address
	(*PhoneNumber)(nil),   // 14: github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneNumber
}
var file_order_management_v1_order_management_proto_depIdxs = []int32{
	3,  // 0: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderResponse.status:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Status
	12, // 1: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderRequest.customer_info:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Customer
	10, // 2: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderRequest.pizzas:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza
	11, // 3: github.com.mike_jacks.pizza_co.protos.order_management.v1.OrderRequest.payment_method:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Payment
	4,  // 4: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.toppings:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Topping
	5,  // 5: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.size:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Size
	6,  // 6: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.crust_type:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.CrustType
	7,  // 7: github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.extra_options:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Pizza.Extra
	0,  // 8: github.com.mike_jacks.pizza_co.protos.order_management.v1.Payment.payment_type:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentType
	1,  // 9: github.com.mike_jacks.pizza_co.protos.order_management.v1.Payment.payment_timeframe:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.PaymentTimeframe
	13, // 10: github.com.mike_jacks.pizza_co.protos.order_management.v1.Customer.delivery_address:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.Address
	14, // 11: github.com.mike_jacks.pizza_co.protos.order_management.v1.Customer.phone_number:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneNumber
	2,  // 12: github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneNumber.type:type_name -> github.com.mike_jacks.pizza_co.protos.order_management.v1.PhoneType
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_order_management_v1_order_management_proto_init() }
func file_order_management_v1_order_management_proto_init() {
	if File_order_management_v1_order_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_management_v1_order_management_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Pizza); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_management_v1_order_management_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_management_v1_order_management_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_management_v1_order_management_proto_goTypes,
		DependencyIndexes: file_order_management_v1_order_management_proto_depIdxs,
		EnumInfos:         file_order_management_v1_order_management_proto_enumTypes,
		MessageInfos:      file_order_management_v1_order_management_proto_msgTypes,
	}.Build()
	File_order_management_v1_order_management_proto = out.File
	file_order_management_v1_order_management_proto_rawDesc = nil
	file_order_management_v1_order_management_proto_goTypes = nil
	file_order_management_v1_order_management_proto_depIdxs = nil
}
